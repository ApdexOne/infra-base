---

apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: container-image
spec:
  serviceAccountName: workflow
  templates:
  - name: build-kaniko-git
    inputs:
      artifacts:
        - name: argo-source
          path: /src
          git:
            repo: git@gitea-ssh.services.svc:ApdexOne/project1.git
            revision: "HEAD"
            insecureIgnoreHostKey: true
            sshPrivateKeySecret:
              name: github-ssh
              key: sshPrivateKey
      parameters:
      - name: repo_url
      - name: repo_ref
        value: refs/heads/master
      - name: repo_commit_id
        value: HEAD
      - name: container_image
      - name: container_tag
    container:
      image: gcr.io/kaniko-project/executor:debug
      env:
        - name: container
          value: "docker"
      workingDir: /src
      args:
      - --context=./
      - --destination={{inputs.parameters.container_image}}:{{inputs.parameters.container_tag}}
      volumeMounts:
        - name: regcred
          mountPath: /kaniko/.docker/
---

apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: send-notification
spec:
  serviceAccountName: workflow
  templates:
  - name: notify
    container:
      image: docker/whalesay
      command: [cowsay]
      args: ["Hello world"]

---

apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: cronjob
spec:
  templates:
  - name: create-cronjob
    resource:
      action: create
      manifest: |
        apiVersion: batch/v1beta1
        kind: CronJob
        metadata:
          namespace: workflows
          name: hello
        spec:
          schedule: "0 * * * *"
          jobTemplate:
            spec:
              template:
                spec:
                  containers:
                  - name: hello
                    image: busybox
                    imagePullPolicy: IfNotPresent
                    command:
                    - /bin/sh
                    - -c
                    - date; echo Hello from the Kubernetes cluster
                  restartPolicy: OnFailure
